Тема 3. Базовые операции языка Python

Отчет по Теме #2 выполнил:

Хорасанлыев Аганяз 

ПИЭ-23-1

| Задание | Лаб_раб | Сам_раб |
|---|---|---|
| Задание 1 |  |  |
| Задание 2 |  |  |
| Задание 3 |  |  |
| Задание 4 |  |  |
| Задание 5 |  |  |
| Задание 6 |  |  |
| Задание 7 |  |  |
| Задание 8 |  |  |
| Задание 9 |  |  |
| Задание 10 |  |  |


**Лабораторная работа №1**
___

**Выведите в консоль три строки. Первая – любое число. Вторая – любое число в виде строки. Третья – любое число с плавающей точкой.**
```
print (123)
print ('123')
print (1.23)
```
Результат.

![lab1](https://github.com/Aganyaz62/Python/blob/main/skriny/lab1.png)

Выводы.

В данном коде выводятся три строки с использованием функции print(). Каждая строка содержит разные значения:

print(123): Выводится целое число 123. Это число не взаимодействует со строковыми операциями и выводится как есть.

print('123'): Выводится строка '123', так как она заключена в одинарные кавычки. В этом случае это текстовая строка, а не число.

print(1.23): Выводится число с плавающей точкой 1.23. Так же, как и в первом случае, оно выводится как числовое значение.

**Лабораторная работа №2**
___

**Выведите в консоль три строки. Первая – результат сложения или вычитания минимум двух
переменных типа int. Вторая – результат сложения или вычитания минимум двух
переменных типа float. Третья – результат сложения или вычитания минимум двух
переменных типа int и float.**

```
print(112+856)
print(4.85-1.36)
print(12+4.8-4+4.12)
```
Результат.

![lab2](https://github.com/Aganyaz62/Python/blob/main/skriny/lab2.png)

Выводы.

print(112 + 856): Выводится результат сложения двух целых чисел.

print(4.85 - 1.36): Выводится результат вычитания двух чисел с плавающей точкой.

print(12 + 4.8 - 4 + 4.12): Выводится результат сложения и вычитания целых и дробных чисел.


**Лабораторная работа №3**
___

**Выведите в консоль три строки. Первая – обычная строка. Вторая – F строка с
использованием заранее объявленной переменной. Третья – сложите две или более строк в
одну.**

```
print('Привет, Мир!')

world = 'Мир'
print(f"Привет, {world}!")

one = 'Привет, '
two = 'Мир!'
print(one + two)
```

Результат.
![lab3](https://github.com/Aganyaz62/Python/blob/main/skriny/lab3.png)

Выводы.

print('Привет, Мир!'): Выводит на консоль строку "Привет, Мир!", используя прямой вызов функции print()

world = 'Мир': Объявляет переменную world и присваивает ей значение "Мир"

print(f"Привет, {world}!"): Выводит строку "Привет, " и значение переменной world, используя f-строку для форматирования

one = 'Привет, ': Объявляет переменную one и присваивает ей значение "Привет, "

two = 'Мир!': Объявляет переменную two и присваивает ей значение "Мир!"

print(one + two): Выводит на консоль результат объединения строк one и two, формируя "Привет, Мир!"

**Лабораторная работа №4**
___

**Выведите в консоль три строки. Первая – трансформация любого типа переменной в bool.
Вторая – трансформация любого типа переменной в float или int. Третья – трансформация
любого типа переменной в str.**

```
one = 'Hello'
print(bool(one))

two = 142
print(float(two))

three = None
print(str(three))

```
Результат.

![lab4](https://github.com/Aganyaz62/Python/blob/main/skriny/lab4.png)

Выводы.

one = 'Hello': Присваивает переменной one строку "Hello".

print(bool(one)): Преобразует строку one в логическое значение (True) и выводит его.


two = 142: Присваивает переменной two целое число 142.

print(float(two)):  Преобразует целое число two в число с плавающей точкой (142.0) и выводит его.


three = None: Присваивает переменной three значение None (отсутствие значения).

print(str(three)): Преобразует значение None в строку ("None") и выводит его.


**Лабораторная работа №5**
___

**Присвойте трем переменным различные значения, воспользовавшись функцией input()**

```
one = input('one:')
two = input('two:')
three = input('three:')
print(one, two, three)
```


Результат.

![lab5](https://github.com/Aganyaz62/Python/blob/main/skriny/lab5.png)

Выводы.

one = input('one: '): Запрашивает у пользователя ввод значения для переменной one и сохраняет его как строку.

two = input('two: ') : Запрашивает у пользователя ввод значения для переменной two и сохраняет его как строку.

three = input('three: '):  Запрашивает у пользователя ввод значения для переменной three и сохраняет его как строку.

print(one, two, three): Выводит значения переменных one, two и three на консоль через пробел.


**Лабораторная работа №6**
___

**Создайте две любые числовые переменные и выполните над ними несколько математических
операций: возведение в степень, обычное деление, целочисленное деление, нахождение
остатка от деления. При желании вы можете проверить как работают эти вычисления с
разными типами данных, например, сначала создать две переменные int, затем создать две
переменные float и наконец создать переменные типа int и float и провести над ними
операции, прописанные выше.**

```
a = 12
b = 5
print('возведение в степень:', a ** b)
print('Обычное деление:', a / b)
print('Целочисленное деление:', a // b)
print('Нахождение остатка от деления:', a % b)
```

Результат.

![lab6](https://github.com/Aganyaz62/Python/blob/main/skriny/lab6.png)


Выводы.

a = 12: Присваивает переменной a целое число 12.

b = 5: Присваивает переменной b целое число 5.

print('возведение в степень:', a ** b):  Выводит результат возведения a в степень b.

print('Обычное деление:', a / b): Выводит результат обычного деления a на b (с плавающей точкой).

print('Целочисленное деление:', a // b):  Выводит результат целочисленного деления a на b (без остатка).

print('Нахождение остатка от деления:', a % b): Выводит остаток от деления a на b.


**Лабораторная работа №7**
___

**Создайте любую строковую переменную и произведите над ней математическое действие
умножение на любое число.**

```
line = 'Hello! '
print(line * 6)
```

Результат.

![lab7](https://github.com/Aganyaz62/Python/blob/main/skriny/lab7.png)

Выводы.

line = 'Hello! ': Присваивает переменной line строку "Hello! ".

print(line * 6): Выводит строку line, повторенную 6 раз.


**Лабораторная работа №8**
___

**Посчитайте сколько раз символ ‘o’ встречается в строке ‘Hello World’.**

```
sentence = 'Hellow World'
print(sentence.count('o'))
```

Результат.

![lab8](https://github.com/Aganyaz62/Python/blob/main/skriny/lab8.png)

Выводы.

sentence = 'Hello World': Присваивает переменной sentence строку "Hello World".

print(sentence.count('o')): Выводит количество вхождений символа 'o' в строку sentence.


**Лабораторная работа №9**
___

**Напишите предложение ‘Hello World’ в две строки. Написанная программа должна занимать
одну строку в редакторе кода**

```
print('Hello\nWorld')
```

Результат.

![lab9](https://github.com/Aganyaz62/Python/blob/main/skriny/lab9.png)

Выводы.

print('Hello\nWorld'): Выводит строку "Hello", затем переходит на новую строку и выводит "World".


**Лабораторная работа №10**
___

**Из предложения ‘Hello World’ выведите в консоль только 2 символ, а затем выведите слово
‘Hello’**

```
sentence = 'Hellow World'
print(sentence[1])
print(sentence[:5])

```

Результат.

![lab10](https://github.com/Aganyaz62/Python/blob/main/skriny/lab10.png)

Выводы.

sentence = 'Hello World': Присваивает переменной sentence строку "Hello World".

print(sentence[1]): Выводит символ, находящийся по индексу 1 в строке sentence (символ "e").

print(sentence[:5]): Выводит подстроку из sentence, начиная с индекса 0 и до индекса 5 (не включая его), то есть "Hello".



**Самостоятельная работа №1**
___

**Выведите в консоль булевую переменную False, не используя слово False в строке или
изначально присвоенную булевую переменную. Программа должна занимать не более двух
строк редактора кода.**

```
print(not True)
```

Результат.

![cam1](https://github.com/Aganyaz62/Python/blob/main/skriny/cam1.png)

Выводы.

Оператор not инвертирует логическое значение.


**Самостоятельная работа №2**
___
**Присвоить значения трем переменным и вывести их в консоль, используя только две строки
редактора кода.**

```
a, b, c = 1, 2, 3
print(a, b, c)
```

Результат.

![cam2](https://github.com/Aganyaz62/Python/blob/main/skriny/cam2.png)

Выводы.

a, b, c = 1, 2, 3: Это множественное присваивание. 


**Самостоятельная работа №3**
___

**Реализуйте ввод данных в программу, через консоль, в виде только целых чисел (тип данных
int). То есть при вводе буквенных символов в консоль, программа не должна работать.
Программа должна занимать не более двух строк редактора кода.**

```
x = int(input())
print(x)
```

Результат.

![cam3](https://github.com/Aganyaz62/Python/blob/main/skriny/cam3.png)

Выводы.

Код считывает целое число с ввода и выводит его на экран.


**Самостоятельная работа №4**
___

**Создайте только одну строковую переменную. Длина строки должна не превышать 5
символов. На выходе мы должны получить строку длиной не менее 16 символов. Программа
должна занимать не более двух строк редактора кода.**

```
a = "open"
print(a * 5)
```

Результат.

![cam4](https://github.com/Aganyaz62/Python/blob/main/skriny/cam4.png)

Выводы.

a = "open":  Присваивает строковое значение "open" переменной a.
 
a * 5:  В Python, когда строка умножается на целое число, строка повторяется указанное количество раз. В данном случае, строка "open" повторяется 5 раз.


**Самостоятельная работа №5**
___
**Создайте три переменные: день (тип данных - числовой), месяц (тип данных - строка), год
(тип данных - числовой) и выведите в консоль текущую дату в формате: “Сегодня день месяц
год. Всего хорошего!” используя F строку и оператор end внутри print(), в котором вы должны
написать фразу “Всего хорошего!”. Программа должна занимать не более двух строк
редактора кода.**

```
day, month, year = 9, "сентябр", 2025;
print(f"Сегодня {day} {month} {year}. ", end="Всего хорошего!")

```

Результат.

![cam5](https://github.com/Aganyaz62/Python/blob/main/skriny/cam5.png)

Выводы.

print(f"Сегодня {day} {month} {year}. ", end="Всего хорошего!") :  Здесь используется f-строка (formatted string literal), которая позволяет встраивать значения переменных непосредственно в строку.

 end="Всего хорошего!" :  Параметр end функции print() определяет, чем заканчивается вывод. 



**Самостоятельная работа №6**
___

**В предложении ‘Hello World’ вставьте ‘my’ между двумя словами. Выведите полученное
предложение в консоль в одну строку. Программа должна занимать не более двух строк
редактора кода.**

```
s = 'Hello World'
print(s[:5] + ' my ' + s[5:])

```

Результат.

![cam6](https://github.com/Aganyaz62/Python/blob/main/skriny/cam6.png)

Выводы.

s = 'Hello World' :  Присваивает строку "Hello World" переменной s.

s[:5] : Это срез строки.  Он извлекает подстроку из s, начиная с начала строки (индекс 0) и до индекса 5 (не включая его). Таким образом, 

s[:5] вернет "Hello".s[5:] :  Это тоже срез строки. Он извлекает подстроку из s, начиная с индекса 5 и до конца строки. Таким образом, s[5:] вернет " World".


**Самостоятельная работа №7**
___

**Узнайте длину предложения ‘Hello World’, результат выведите в консоль. Программа должна
занимать не более двух строк редактора кода**

```
a = 'Hello World'
print(len(a))
```

Результат.

![cam7](https://github.com/Aganyaz62/Python/blob/main/skriny/cam7.png)

Выводы.

a = 'Hello World' :  Присваивает строку "Hello World" переменной a.

len(a) :  Функция len() возвращает длину строки (количество символов в строке). В данном случае, строка "Hello World" состоит из 11 символов (включая пробел).



**Самостоятельная работа №8**
___

**Переведите предложение ‘HELLO WORLD’ в нижний регистр. Программа должна занимать
не более двух строк редактора кода.**

```
s = 'HELLO WORLD'
print(s.lower())

```

Результат.

![cam8](https://github.com/Aganyaz62/Python/blob/main/skriny/cam8.png)

Выводы.

s = 'HELLO WORLD' : Присваивает строку "HELLO WORLD" (в верхнем регистре) переменной s.

s.lower() : Это метод строки, который создает новую строку, в которой все символы исходной строки s приведены к нижнему регистру.



**Самостоятельная работа №9**
___
**Напишите программу, которая запрашивает у пользователя два числа и выводит на экран их сумму, разность, произведение и частное.**

```
num1 = float(input("Введите первое число: "))
num2 = float(input("Введите второе число: "))

print("Сумма:", num1 + num2)
print("Разность:", num1 - num2)
print("Произведение:", num1 * num2)
if num2 != 0:
    print("Частное:", num1 / num2)
else:
    print("Деление на ноль невозможно, так как второе число равно 0.")

```

Результат.

![cam9](https://github.com/Aganyaz62/Python/blob/main/skriny/cam9.png)

Выводы.
Функция input() используется для запроса двух чисел у пользователя.
Функция float() преобразует введенные пользователем значения (которые изначально являются строками) в числа с плавающей точкой (float). Это позволяет программе правильно обрабатывать как целые, так и дробные числа.


**Самостоятельная работа №10**
____

**Запросить у пользователя число и вывести, является ли оно четным или нечетным.**

```
n = int(input())
print("Четное" if n % 2 == 0 else "Нечетное")
```

Результат.

![cam10](https://github.com/Aganyaz62/Python/blob/main/skriny/cam10.png)

Выводы.

n = int(input()): Считывает число от пользователя.

print("Четное" if n % 2 == 0 else "Нечетное"): Выводит "Четное", если число делится на 2 без остатка, иначе - "Нечетное".
